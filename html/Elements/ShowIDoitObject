<div id="i-doit-objectbrowser" style="position: relative; min-width: 400px;">
    <div id="data-store" style="display:none;"></div>
	<div id="i-doit-browser-notice" class="ui-corner-all"></div>
    <div id="i-doit-content" style="display:none;">
		<b><% loc('Selected objects') %></b>
		
		<table class="object-table" style="width:100%;">
			<thead>
				<tr>
					<th width="10%"><% loc('ID') %></th>
					<th width="40%"><% loc('Name') %></th>
					<th width="40%"><% loc('Type') %></th>
				</tr>
			</thead>
			<tbody>
			</tbody>
		</table>
    </div>
</div>

<script type="text/javascript">
	// Global variables (without "var").
    idoit_url = '<% $IDoitURL %>';

	api_url = '<% $IDoitAPI %>';
	api_lang = '<% $IDoitLanguage %>';
	api_user = '<% $IDoitUser %>';
	api_password = '<% $IDoitPassword %>';
	api_mandator = 0;

	show_custom_fields = <% $IDoitShowCustomFields %>;

	browser_preselection_field = 'tr#<% $IDoitObjects %>';
	browser_mandator_field = 'tr#<% $IDoitMandator %>';
	
	datatable_lang = {
		"sProcessing":   "<% loc('Please wait...') %>",
		"sLengthMenu":   "_MENU_ Einträge anzeigen",
		"sZeroRecords":  "<% loc('No objects has been selected yet.') %>",
		"sInfo":         "_START_ bis _END_ von _TOTAL_ Einträgen",
		"sInfoEmpty":    "0 bis 0 von 0 Einträgen",
		"sInfoFiltered": "(gefiltert von _MAX_ Einträgen)",
		"sInfoPostFix":  "",
		"sSearch":       "<% loc('Search') %>",
		"sUrl":          "",
		"oPaginate": {
			"sFirst":    "&laquo;",
			"sPrevious": "&lsaquo;",
			"sNext":     "&rsaquo;",
			"sLast":     "&raquo;"
		}
	};
	
	preselection = [];
</script>

<script type="text/javascript" src="<% RT->Config->Get('WebPath') %>/NoAuth/js/i-doit-objectbrowser.js"></script>

<script type="text/javascript">
	(function($) {
		browser_preselection_field = $(browser_preselection_field);
		browser_mandator_field = $(browser_mandator_field);
		
		list = $('#i-doit-content table.object-table').dataTable({
			"bJQueryUI": true,
			"bAutoWidth": false,
			"bPaginate": false,
			"bLengthChange": false,
			"bSort": false,
			"oLanguage": datatable_lang
		});
		
		$.each(browser_preselection_field.find('ul li'), function(i, e) {
			preselection.push($(e).text().replace(/[\n\s]/g, ''));
		});
		
		api_mandator = browser_mandator_field.find('td.value').text().replace(/[\n\s]/g, '');

		data = {
			"method":"cmdb.objects",
			"params":{
				"session":{
					"username":api_user,
					"password":api_password,
					"language":api_lang,
					"mandator":api_mandator},
				"filter":{
					"ids":preselection}},
			"id":"1",
			"jsonrpc":"2.0"};

		idoit_ajax(data, function(response) {
				if (response.error == null) {
					$('#i-doit-browser-notice').css({display: 'none'});
					$('#i-doit-content').css({display: 'block'});
					
					$.each(response.result, function(i, e) {
						list.fnAddData([e.id, e.title, e.type_title]);
					});
				} else {
					window.error_notice(objectbrowser_lang.LC_ERR_LOADING_OBJECTS_BY_PRESELECTION);
				}
			});

		// Hide custom fields:
		if (show_custom_fields == 0) {
			browser_preselection_field.hide();
			browser_mandator_field.hide();
		}

		// Start the browser.
		window.init_browser();
	})(jQuery);
</script>

<%INIT>
use Switch;

$IDoitURL = RT->Config->Get('IDoitURL');
unless($IDoitURL) {
    my $msg = loc('URL for i-doit is not configured.');
    RT::Logger->error($msg);
    $$skip_create = 1;
    push @{$results}, $msg;
}

$IDoitAPI = RT->Config->Get('IDoitAPI');
unless($IDoitAPI) {
    my $msg = loc('URL for i-doit\'s API is not configured.');
    RT::Logger->error($msg);
    $$skip_create = 1;
    push @{$results}, $msg;
}

$IDoitLanguage = RT->Config->Get('IDoitLanguage');
unless($IDoitLanguage) {
    my $msg = loc('Language for i-doit\'s API is not configured.');
    RT::Logger->error($msg);
    $$skip_create = 1;
    push @{$results}, $msg;
}

$IDoitUser = RT->Config->Get('IDoitUser');
unless($IDoitUser) {
    my $msg = loc('User for i-doit\'s API is not configured.');
    RT::Logger->error($msg);
    $$skip_create = 1;
    push @{$results}, $msg;
}

$IDoitPassword = RT->Config->Get('IDoitPassword');
unless($IDoitPassword) {
    my $msg = loc('Password for i-doit\'s API is not configured.');
    RT::Logger->error($msg);
    $$skip_create = 1;
    push @{$results}, $msg;
}

my $cfMandator = 'i-doit mandator';
my $cf = RT::CustomField->new($RT::SystemUser);
$cf->LoadByNameAndQueue(Name => $cfMandator, Queue => '0');
unless($cf->id) {
    my $msg = loc(sprintf('Custom field "%s" does not exist.', $cfMandator));
    RT::Logger->error($msg);
    $$skip_create = 1;
    push @{$results}, $msg;
}
$IDoitMandator = 'CF-' . $cf->id . '-ShowRow';

my $cfObjects = 'i-doit objects';
$cf = RT::CustomField->new($RT::SystemUser);
$cf->LoadByNameAndQueue(Name => $cfObjects, Queue => '0');
unless($cf->id) {
    my $msg = loc(sprintf('Custom field "%s" does not exist.', $cfObjects));
    RT::Logger->error($msg);
    $$skip_create = 1;
    push @{$results}, $msg;
}
$IDoitObjects = 'CF-' . $cf->id . '-ShowRow';

$IDoitShowCustomFields = RT->Config->Get('IDoitShowCustomFields');
unless($IDoitShowCustomFields) {
    my $msg = loc('Configuration option to show/hide i-doit related custom fields is not set.');
    RT::Logger->error($msg);
    $$skip_create = 1;
    push @{$results}, $msg;
}
</%INIT>

<%ARGS>
$skip_create => undef
$results => undef

$IDoitURL => undef
$IDoitAPI => undef
$IDoitLanguage => undef
$IDoitUser => undef
$IDoitPassword => undef
$IDoitMandator => undef
$IDoitObjects => undef
$IDoitView => undef
$IDoitShowCustomFields => undef
</%ARGS>
